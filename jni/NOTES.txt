3-mar-2012
==========
To compile/link:

NOTE: xyzzy from http://sourceforge.net/projects/anvil/files/

g++ -I/usr/lib/jvm/java-6-sun/include -I/usr/lib/jvm/java-6-sun/include/linux -I$HOME/projects/xyzzy/src -L/usr/lib/jvm/java-6-sun-1.6.0.26/jre/lib/amd64/server nldb.cxx -ljvm -static-libstdc++ $HOME/projects/xyzzy/dist/debug/linux/xyzzy.a -g
h

Note -ljvm occurs AFTER reference (since linker is 1-pass resolve).

to run:
=======
( setenv LD_LIBRARY_PATH /usr/lib/jvm/java-6-sun-1.6.0.26/jre/lib/amd64/server ; gdb a.out )

To get java class method signatures, use:

javap -s -classpath ./nldb.jar nldb/parser/VnlParser
...

See 
http://java.sun.com/developer/onlineTraining/Programming/JDCBook/jnistring.html
about:
Pinning Array
When retrieving an array, you can specify if this is a copy (JNI_TRUE) or a reference to the array residing in your Java language program (JNI_FALSE). If you use a reference to the array, you will want the array to stay where it is in the Java heap and not get moved by the garbage collector when it compacts heap memory. To prevent the array references from being moved, the Java virtual machine pins the array into memory. Pinning the array ensures that when the array is released, the correct elements are updated in the Java VM.
